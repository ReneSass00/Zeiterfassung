@using Zeiterfassung.Data
@using System.ComponentModel.DataAnnotations

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">@DialogTitle</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@success" Model="timeEntryModel">
            <MudSelect T="int" @bind-Value="timeEntryModel.ProjectId" For="@(() => timeEntryModel.ProjectId)" Label="Projekt" Required="true" RequiredError="Bitte ein Projekt auswählen.">
                @foreach (var proj in UserProjects)
                {
                    <MudSelectItem Value="@proj.Id">@proj.Name</MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="timeEntryModel.Description" Label="Beschreibung" Required="true" RequiredError="Bitte eine Beschreibung angeben." For="@(() => timeEntryModel.Description)" Class="mt-3" />

            <MudDatePicker @bind-Date="date" Label="Datum" Required="true" Class="mt-3" />
            <div class="d-flex mt-3">
                <MudTimePicker @bind-Time="startTime" Label="Startzeit" Required="true" />
                <MudTimePicker @bind-Time="endTime" Label="Endzeit" Required="true" Class="ml-3" />
            </div>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Abbrechen</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit" Disabled="@(!success)">Speichern</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<Project> UserProjects { get; set; } = new();

    [Parameter]
    public TimeEntry? EntryToEdit { get; set; }

    private MudForm form;
    private bool success;
    private TimeEntry timeEntryModel = new();

    private string DialogTitle = "Neuen Zeiteintrag erstellen";

    // Hilfsvariablen für die MudBlazor Picker
    private DateTime? date;
    private TimeSpan? startTime;
    private TimeSpan? endTime;

    protected override void OnInitialized()
    {
        if (EntryToEdit is not null)
        {
            // Wenn ein Eintrag zum Bearbeiten übergeben wurde, füllen wir das Formular
            DialogTitle = "Zeiteintrag bearbeiten";
            timeEntryModel = EntryToEdit;
            date = EntryToEdit.StartTime.Date;
            startTime = EntryToEdit.StartTime.TimeOfDay;
            endTime = EntryToEdit.EndTime.TimeOfDay;
        }
        else
        {
            // Andernfalls starten wir mit Standardwerten für einen neuen Eintrag
            date = DateTime.Today;
            startTime = new TimeSpan(9, 0, 0);
        }
    }

    private void Submit()
    {
        if (date.HasValue && startTime.HasValue && endTime.HasValue)
        {
            timeEntryModel.StartTime = date.Value.Add(startTime.Value);
            timeEntryModel.EndTime = date.Value.Add(endTime.Value);
            MudDialog.Close(DialogResult.Ok(timeEntryModel));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}